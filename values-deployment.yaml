replicas: 3
leaderElection:
  enabled: true
kind: Deployment

deschedulerPolicyAPIVersion: "descheduler/v1alpha2"
deschedulerPolicy:
  profiles:
    - name: ProfileWithMultipleStrategies
      pluginConfig:
      - name: "RemoveDuplicates"
        args:
          excludeOwnerKinds:
            - "ReplicaSet"
            - "StatefulSet"
            - "DaemonSet"
            - "Job"  # This protects CronJob-created Jobs
      - name: "LowNodeUtilization"
        args:
          thresholds:
            cpu: 20
            memory: 20
            pods: 20
          targetThresholds:
            cpu: 50
            memory: 50
            pods: 50
          evictableNamespaces:
            include: []
            exclude: ["kube-system", "kube-public"]
      - name: "RemovePodsHavingTooManyRestarts"
        args:
          podRestartThreshold: 2
          includingInitContainers: true
          excludeOwnerKinds:
            - "StatefulSet"  # StatefulSets need careful restart handling
            - "Job"  # CronJob pods might restart intentionally
      plugins:
        deschedule:
          enabled:
            - "RemovePodsHavingTooManyRestarts"
        balance:
          enabled:
            - "RemoveDuplicates"
            - "LowNodeUtilization"
        
# Additional configuration for different workload types
evictDaemonSetPods: false  # Keep DaemonSet pods by default
evictSystemCriticalPods: false  # Don't evict system critical pods
evictLocalStoragePods: false  # Don't evict pods with local storage

# Namespace filtering
namespaces:
  include: []  # Empty means all namespaces
  exclude: 
    - kube-system
    - kube-public
    - kube-node-lease

# Node selector for targeting specific nodes
nodeSelector: {}

# Priority class configuration
priorityThreshold:
  value: 10000
  
# Resource limits for the descheduler itself
resources:
  requests:
    cpu: 500m
    memory: 256Mi
  limits:
    cpu: 1000m
    memory: 512Mi